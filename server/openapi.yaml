openapi: 3.0.1
info:
  title: Todo Backend
  version: "1.0"
servers:
  - url: http://localhost:81
paths:
  /auth/register:
    post:
      summary: Register a new user
      operationId: userRegister
      responses:
        200:
          description: Successfully registered a new user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        400:
          description: "Invalid or email"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/login:
    post:
      summary: Login as a user
      operationId: userLogin
      responses:
        200:
          description: Successfully logged in as user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        400:
          description: "Invalid or used email"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        401:
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api:
    get:
      summary: Redirect to welcome page
      operationId: redirect
      responses:
        200:
          description: OK
          content:
            '*/*': {}
  /api/todos:
    get:
      summary: Get the list of all Todos
      operationId: todoGetAll
      responses:
        200:
          description: List of all Todos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
    post:
      summary: Create a new todo
      operationId: todoCreate
      requestBody:
        description: The todo to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        201:
          description: The created Todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
    delete:
      summary: Delete the all todos that are completed
      operationId: todoDeleteCompleted
      responses:
        204:
          description: No content
    options:
      summary: Get the options
      operationId: todoOpt
      responses:
        200:
          description: OK
          content:
            application/json: {}
  /api/{id}:
    get:
      summary: Get one todo
      operationId: todoGetOne
      parameters:
      - name: id
        in: path
        description: The id of the todo
        required: true
        schema:
          format: int64
          type: integer
        example: 42
      responses:
        200:
          description: The requested Todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
    delete:
      summary: Delete one todo
      operationId: todoDeleteOne
      parameters:
      - name: id
        in: path
        description: The id of the todo
        required: true
        schema:
          format: int64
          type: integer
        example: 42
      responses:
        204:
          description: No content
    patch:
      summary: Update an existing todo
      operationId: todoUpdate
      parameters:
      - name: id
        in: path
        description: The id of the todo
        required: true
        schema:
          format: int64
          type: integer
        example: 42
      requestBody:
        description: The todo to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        200:
          description: The updated Todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
components:
  securitySchemes:
    bearerAuth:            
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      description: Object representing an authentification
      type: object
      properties:
        status:
          description: Status of request
          type: string
          example: Success
        message:
          description: Corresponding message
          type: string
        token:
          description: token to validate requests
          type: string
    List:
      description: Object representing a Todo
      type: object
      properties:
        _id:
          description: id of the entity
          type: string
          example: "6123456789abcdef01234567"
        title:
          description: title of the list
          type: string
          example: My List
        todos:
          description: array of Todo references
          type: array
          items:
            type: string
            example: "6123456789abcdef01234567"
        list:
          description: reference to a List entity
          type: string
          example: "6123443589abcgth01296547"
        user:
          description: _id of the associated User
          type: string
          example: "65b0ed15ee1cb12b2614b37f"
    Todo:
      description: Object representing a Todo
      type: object
      properties:
        _id:
          description: id of the entity
          type: string
          example: "6123456789abcdef01234567"
        title:
          description: title of the todo
          type: string
          example: My task
        completed:
          description: whether the todo is completed or not
          type: boolean
          example: false
        list:
          description: reference to a List entity
          type: string
          example: "6123443589abcgth01296547"
        user:
          description: _id of the associated User
          type: string
          example: "65b0ed15ee1cb12b2614b37f"
    ErrorResponse:
      type: "object"
      properties:
        status: 
          type: string
          example: Error
        message:
          type: string
security:
  - bearerAuth: []


    

